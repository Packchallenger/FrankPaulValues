<head>
<link href="https://fonts.googleapis.com/css?family=Montserrat:300,400,700|Roboto:400,700" rel="stylesheet">
<link href='style.css' rel='stylesheet' type='text/css'>
<title>FrankPaulValues Quiz</title>
<link rel="icon" type="x-icon" href="icon.png">
<link rel="shortcut icon" type="x-icon" href="icon.png">
<meta charset="utf-8">
</head>
<body>
<script type="application/javascript" src="questions.js">
</script>
<h1>FrankPaulValues</h1>
<hr>
<h2 style="text-align:center;" id="question-number">Loading...</h2>
<p class="question" id="question-text"></p>
<button class="button" onclick="next_question( 1.0)" style="background-color: #1b5e20;">Strongly Agree</button> <br>
<button class="button" onclick="next_question( 0.5)" style="background-color: #4caf50;">Agree</button> <br>
<button class="button" onclick="next_question( 0.0)" style="background-color: #bbbbbb;">Neutral/Unsure</button> <br>
<button class="button" onclick="next_question(-0.5)" style="background-color: #f44336;">Disagree</button> <br>
<button class="button" onclick="next_question(-1.0)" style="background-color: #b71c1c;">Strongly Disagree</button> <br>
<button class="small_button" onclick="prev_question()" id="back_button">Back</button>
<button class="small_button_off" id="back_button_off">Back</button><br>

<!-- JavaScript for the test itself -->
<script>
    var max_economics, max_perspective, max_government, max_welfare, max_drugs, max_compassion; // Max possible scores
    max_economics = max_perspective = max_government = max_welfare = max_drugs = max_compassion = 0;
    var economics, perspective, government, welfare, drugs, compassion; // User's scores
    economics = perspective = government = welfare = drugs = compassion = 0;
    var qn = 0; // Question number
    var prev_answer = null;
    init_question();
    for (var i = 0; i < questions.length; i++) {
        max_economics += Math.abs(questions[i].effect.economics)
        max_perspective += Math.abs(questions[i].effect.perspective)
        max_government += Math.abs(questions[i].effect.government)
        max_welfare += Math.abs(questions[i].effect.welfare)
        max_drugs += Math.abs(questions[i].effect.drugs)
        max_compassion += Math.abs(questions[i].effect.compassion)
    }
    function init_question() {
        document.getElementById("question-text").innerHTML = questions[qn].question;
        document.getElementById("question-number").innerHTML = "Question " + (qn + 1) + " of " + (questions.length);
        if (prev_answer == null) {
            document.getElementById("back_button").style.display = 'none';
            document.getElementById("back_button_off").style.display = 'block';
        } else {
            document.getElementById("back_button").style.display = 'block';
            document.getElementById("back_button_off").style.display = 'none';
        }

    }

    function next_question(mult) {
        economics += mult*questions[qn].effect.economics
        perspective += mult*questions[qn].effect.perspective
        government += mult*questions[qn].effect.government
        welfare += mult*questions[qn].effect.welfare
        drugs += mult*questions[qn].effect.drugs
        compassion += mult*questions[qn].effect.compassion
        qn++;
        prev_answer = mult;
        if (qn < questions.length) {
            init_question();
        } else {
            results();
        }
    }
    function prev_question() {
        if (prev_answer == null) {
            return;
        }
        qn--;
        economics -= prev_answer * questions[qn].effect.economics;
        perspective -= prev_answer * questions[qn].effect.perspective;
        government -= prev_answer * questions[qn].effect.government;
        welfare -= prev_answer * questions[qn].effect.welfare;
        drugs -= prev_answer * questions[qn].effect.drugs;
        compassion -= prev_answer * questions[qn].effect.compassion;
        prev_answer = null;
        init_question();

    }
    function calc_score(score,max) {
        return (100*(max+score)/(2*max)).toFixed(1)
    }
    function results() {
        location.href = `results.html`
            + `?c=${calc_score(economics,max_economics)}`
            + `&n=${calc_score(perspective,max_perspective)}`
            + `&f=${calc_score(government,max_government)}`
            + `&s=${calc_score(welfare,max_welfare)}`
            + `&p=${calc_score(drugs,max_drugs)}`
            + `&a=${calc_score(compassion,max_compassion)}`
    }
</script>
</body>